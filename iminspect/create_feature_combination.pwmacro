version "5.0"
#=======================================================
# ---- InnovMetric Software Inc.
# ---- Module  :    PolyWorks|Inspector
# ---- Version :    2018 IR9 (build 6181)
# ---- Date    :    Wednesday, March 27, 2019 - 17:02:47
#-------------------------------------------------------

# Creates feature from 2 other features repetitively

# Example of alternating (create measurement between 1a and 1b, etc.)
# 1a (selected)
# 1b (selected)
# 2a (selected)
# 2b (selected)
# 3a (selected)
# 3b (selected, optional)

# Example of not alternating (create measurement between 1a and 1b, etc.)
# 1a (selected)
# 2a (selected)
# 3a (selected)
# 1b
# 2b
# 3b

# To create distance features between one reference feature and multiple other features, do the following:
# 1. Duplicate all the features to be measured to.
# 2. Move the duplicated features to just before the originals and keep the duplicates selected. Tree view should look like this:
# 1b (2) (selected)
# 2b (2) (selected)
# 3b (2) (selected)
# 1b
# 2b
# 3b
#
# 3. Run this macro.
# 4. Select all the distance features created by the macro. Right-click and select properties. Change the reference feature to the feature you want.


# Get when to start (index1) and stop (index2) from selected features
DECLARE names
DECLARE index1
DECLARE index2
TREEVIEW FEATURE NAME SELECTED GET ( names )
TREEVIEW FEATURE INDEX GET ( $names[1], index1 )
TREEVIEW FEATURE INDEX GET ( $names[SIZE ( names )], index2 )

# Get feature_increment from user (see above examples)
DECLARE alternating
MACRO INPUT QUESTION ( alternating, "Are the values alternating (instead of separate but consecutive groups)?" )

# Get feature type to create from user
DECLARE type
MACRO INPUT STRING ( type, "Select feature type", "Select type of feature to create: [d]istances, [p]oints", "d" )

# Set increments
DECLARE set_increment
DECLARE feature_increment
IF $alternating == 1
    SET set_increment 2
	SET feature_increment 1
ELSEIF $alternating == 0
    SET set_increment 1
    SET feature_increment SIZE ( names )
ENDIF

# Create new features
DECLARE i $index1
DECLARE top_name
DECLARE bot_name
WHILE $i <= $index2
    TREEVIEW FEATURE NAME GET ( EXPR ($i), top_name )
    TREEVIEW FEATURE NAME GET ( EXPR ($i+$feature_increment), bot_name )

	IF $type == "d"
        # Create distance feature
        FEATURE DISTANCE CREATE ( $bot_name, $top_name, "$top_name - dist" )

    ELSEIF $type == "p"
	    # Create average point feature
    	TREEVIEW OBJECT SELECT NONE
	    TREEVIEW FEATURE SELECT ( $i, "On" )
    	TREEVIEW FEATURE SELECT ( EXPR ($i+$feature_increment), "On" )
	    FEATURE PRIMITIVE POINT FROM_POINTS ( "$top_name - avg", )

    ENDIF

    # Increment i
    SET i EXPR ( $i+$set_increment )
ENDWHILE
